// Brute Force
const fib = (n) => {

  if(n == 0)return 0
  return recurse([0,1], n)
};

const recurse = (array, n) => {
  while(array.length <= n){
    array.push(array[array.length-1]+array[array.length-2])
  recurse(array)
  }
  return array[array.length-1]
}

// Memoized

const fib = (n, memo={}) => {
  // todo
  if(n === 0 || n === 1) return n
  if(n in memo) return memo[n]
  memo[n] = fib(n-1, memo) + fib(n-2, memo)
  return memo[n]
}

module.exports = {
  fib,
};